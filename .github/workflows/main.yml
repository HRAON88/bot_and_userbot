name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Initialize Database
      env:
        PGPASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        psql -h localhost -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -c "
        -- Users table
        CREATE TABLE IF NOT EXISTS users (
            user_id BIGINT PRIMARY KEY,
            username TEXT,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );

        -- Triggers table
        CREATE TABLE IF NOT EXISTS triggers (
            id SERIAL PRIMARY KEY,
            trigger_word TEXT NOT NULL,
            response_text TEXT NOT NULL
        );

        -- Scheduled messages table
        CREATE TABLE IF NOT EXISTS scheduled_messages (
            id SERIAL PRIMARY KEY,
            user_id BIGINT,
            message_text TEXT,
            scheduled_time TIMESTAMP
        );

        -- Insert test data for triggers
        INSERT INTO triggers (trigger_word, response_text) 
        VALUES 
            ('тест', 'Это тестовый ответ'),
            ('привет', 'Здравствуйте!'),
            ('помощь', 'Чем могу помочь?')
        ON CONFLICT DO NOTHING;

        -- Insert test user if needed
        INSERT INTO users (user_id, username)
        VALUES (123456789, 'test_user')
        ON CONFLICT DO NOTHING;"

    - name: Run tests
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        ADMIN_ID: ${{ secrets.ADMIN_ID }}
        API_ID: ${{ secrets.API_ID }}
        API_HASH: ${{ secrets.API_HASH }}
        SESSION_STRING: ${{ secrets.SESSION_STRING }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: localhost
      run: |
        pytest tests/ -v

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          .pytest_cache
          test-reports/
